<head>
    <style>
        body { margin: 0; }
        canvas { width: 100%; height: 100% }
    </style>
</head>
<body>
    <script src="~/js/three.js"></script>
    <script src="~/js/three.min.js"></script>
    <script src="~/js/OrbitControls.js"></script>
    <script src="~/js/TextureLoader.js"></script>
    <!-- <script>
        var scene = new THREE.Scene();
        var camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );

        var renderer = new THREE.WebGLRenderer();
        renderer.setSize( window.innerWidth, window.innerHeight );
        document.body.appendChild( renderer.domElement );
        
        // comtrols= new THREE.OrbitControls(camera,renderer.domElement)
        var geometry = new THREE.BoxGeometry( 1, 1, 1 );
        var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );
        var cube = new THREE.Mesh( geometry, material );
        scene.add( cube );
            
        camera.position.z = 5;

        var render = function () {
            requestAnimationFrame( render );

            cube.rotation.x += 0.1;
            cube.rotation.y += 0.1;

            renderer.render(scene, camera);
        };

        render();
    </script> -->
       <!-- <script>
        (function(){var script=document.createElement('script');script.onload=function(){
            var stats=new Stats();
            document.body.appendChild(stats.dom);
            requestAnimationFrame(function loop(){
                stats.update();requestAnimationFrame(loop)
                });};
                script.src='//mrdoob.github.io/stats.js/build/stats.min.js';document.head.appendChild(script);
        })()
        //   Canvas: Phần tử HTML canvas, cái này giống như 1 bức tranh (hay cái màn chiếu) trống, và threejs sẽ vẽ vời lên đây.
        var scene = new THREE.Scene();
        var camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );
        
        // hiển thị hình ảnh input(camera,scence).
        var renderer = new THREE.WebGLRenderer();
        renderer.setSize( window.innerWidth, window.innerHeight );
        document.body.appendChild( renderer.domElement );

        window.addEventListener('resize',function () {
            var width =window.innerWidth;
            var height =window.innerHeight;
            renderer.setSize(width,height);
            camera.aspect = width/height;
            camera.updateProjectionMatrix();
        })
        controls=new THREE.OrbitControls(camera,renderer.domElement);
        @* const loader = new THREE.TextureLoader(); *@
        var cubeMaterials=
        [
            
            new THREE.MeshBasicMaterial({map: new THREE.TextureLoader().load('Img/minhtri.jpg'),side:THREE.DoubleSide}),
            new THREE.MeshBasicMaterial({map: new THREE.TextureLoader().load('Img/minhtri.jpg'),side:THREE.DoubleSide}),
            new THREE.MeshBasicMaterial({map: new THREE.TextureLoader().load('Img/minhtri.jpg'),side:THREE.DoubleSide}),
            new THREE.MeshBasicMaterial({map: new THREE.TextureLoader().load('Img/minhtri.jpg'),side:THREE.DoubleSide}),
            new THREE.MeshBasicMaterial({map: new THREE.TextureLoader().load('Img/minhtri.jpg'),side:THREE.DoubleSide}),
            new THREE.MeshBasicMaterial({map: new THREE.TextureLoader().load('Img/minhtri.jpg'),side:THREE.DoubleSide}),
        ];
                // xác định bên ngoài vật thể(màu, v.v...)
        // var material = new THREE.MeshBasicMaterial( {color: 0x00ff00} );
        var material = new THREE.MeshBasicMaterial(cubeMaterials);
        //xác định hình dạng của vật thể BoxGeometry(chiều rông,chiều dài,độ sâu)
        var geometry = new THREE.BoxGeometry( 1, 1, 1 );
        // var geometry = new THREE.BoxGeometry( 1, 1, 1 );
        var cube = new THREE.Mesh( geometry, material );
        scene.add( cube );

        // phóng màn hình
        camera.position.z = 4;


        document.body.appendChild(renderer.domElement);
        var update = function() {
            // cube.rotation.x += 0.1;
            // cube.rotation.y += 0.1;
        };
    
        var render = function() {
            renderer.render(scene, camera);
        };
        var GameLoop = function() {
            requestAnimationFrame(GameLoop);
            update();
            render();
        }
        GameLoop();
    </script>-->
</body>